[package]
name = "lakesoul-wasm"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
tokio-postgres = { version = "0.7.8", default-features = false, features = ["with-serde_json-1", "with-uuid-1", "array-impls", "js"] }
tokio = { version = "1.35.1", default-features = false, features = ["sync", "macros", "io-util", "rt", "time"] }

chrono = { version = "0.4", features = ["wasmbind"] }
getrandom = { version = "0.2", features = ["js"] }
lazy_static = "1.4.0"
futures = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }

object_store = {workspace = true, features = ["aws","http"]}



# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
colored = "2"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

#[profile.release]
## Tell `rustc` to optimize for small code size.
#opt-level = "s"